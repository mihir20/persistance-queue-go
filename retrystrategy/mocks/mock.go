// Code generated by MockGen. DO NOT EDIT.
// Source: retry_strategy.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockIRetryStrategy is a mock of IRetryStrategy interface.
type MockIRetryStrategy struct {
	ctrl     *gomock.Controller
	recorder *MockIRetryStrategyMockRecorder
}

// MockIRetryStrategyMockRecorder is the mock recorder for MockIRetryStrategy.
type MockIRetryStrategyMockRecorder struct {
	mock *MockIRetryStrategy
}

// NewMockIRetryStrategy creates a new mock instance.
func NewMockIRetryStrategy(ctrl *gomock.Controller) *MockIRetryStrategy {
	mock := &MockIRetryStrategy{ctrl: ctrl}
	mock.recorder = &MockIRetryStrategyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRetryStrategy) EXPECT() *MockIRetryStrategyMockRecorder {
	return m.recorder
}

// GetNextRetryTime mocks base method.
func (m *MockIRetryStrategy) GetNextRetryTime(nextAttemptNumber int, eventPublishedTime time.Time) time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNextRetryTime", nextAttemptNumber, eventPublishedTime)
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// GetNextRetryTime indicates an expected call of GetNextRetryTime.
func (mr *MockIRetryStrategyMockRecorder) GetNextRetryTime(nextAttemptNumber, eventPublishedTime interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNextRetryTime", reflect.TypeOf((*MockIRetryStrategy)(nil).GetNextRetryTime), nextAttemptNumber, eventPublishedTime)
}

// IsMaxRetryMet mocks base method.
func (m *MockIRetryStrategy) IsMaxRetryMet(retryCount int) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsMaxRetryMet", retryCount)
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsMaxRetryMet indicates an expected call of IsMaxRetryMet.
func (mr *MockIRetryStrategyMockRecorder) IsMaxRetryMet(retryCount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsMaxRetryMet", reflect.TypeOf((*MockIRetryStrategy)(nil).IsMaxRetryMet), retryCount)
}
